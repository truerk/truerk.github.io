!function(e){function t(t){for(var r,a,s=t[0],c=t[1],l=t[2],p=0,d=[];p<s.length;p++)a=s[p],Object.prototype.hasOwnProperty.call(n,a)&&n[a]&&d.push(n[a][0]),n[a]=0;for(r in c)Object.prototype.hasOwnProperty.call(c,r)&&(e[r]=c[r]);for(u&&u(t);d.length;)d.shift()();return i.push.apply(i,l||[]),o()}function o(){for(var e,t=0;t<i.length;t++){for(var o=i[t],r=!0,s=1;s<o.length;s++){var c=o[s];0!==n[c]&&(r=!1)}r&&(i.splice(t--,1),e=a(a.s=o[0]))}return e}var r={},n={0:0},i=[];function a(t){if(r[t])return r[t].exports;var o=r[t]={i:t,l:!1,exports:{}};return e[t].call(o.exports,o,o.exports,a),o.l=!0,o.exports}a.m=e,a.c=r,a.d=function(e,t,o){a.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},a.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},a.t=function(e,t){if(1&t&&(e=a(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(a.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)a.d(o,r,function(t){return e[t]}.bind(null,r));return o},a.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return a.d(t,"a",t),t},a.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},a.p="";var s=window.webpackJsonp=window.webpackJsonp||[],c=s.push.bind(s);s.push=t,s=s.slice();for(var l=0;l<s.length;l++)t(s[l]);var u=c;i.push([143,1]),o()}({143:function(e,t,o){o(144),e.exports=o(355)},144:function(e,t,o){"use strict";o.r(t);o(145)},145:function(e,t,o){var r=o(146);"string"==typeof r&&(r=[[e.i,r,""]]);var n={insert:"head",singleton:!1};o(147)(r,n);r.locals&&(e.exports=r.locals)},146:function(e,t,o){},355:function(e,t,o){"use strict";o.r(t);var r=o(140),n=o.n(r),i=(Element.prototype.matches||(Element.prototype.matches=Element.prototype.matchesSelector||Element.prototype.webkitMatchesSelector||Element.prototype.mozMatchesSelector||Element.prototype.msMatchesSelector),Element.prototype.closest||(Element.prototype.closest=function(e){for(var t=this;t;){if(t.matches(e))return t;t=t.parentElement}return null}),window.NodeList&&!NodeList.prototype.forEach&&(NodeList.prototype.forEach=function(e,t){t=t||window;for(var o=0;o<this.length;o++)e.call(t,this[o],o,this)}),n.a.polyfill(),o(148),document.querySelectorAll("[am-burger-button]").forEach((function(e){e.addEventListener("click",(function(){e.hasAttribute("active")?e.removeAttribute("active"):e.setAttribute("active","")}))})),o(101));var a=o(70),s=o.n(a);var c,l,u,p,d=o(23),f=o.n(d),m=o(142);document.querySelectorAll("[menu-target]").forEach((function(e){var t=e.getAttribute("menu-target"),o=document.getElementById(t)||!1;o&&o.getAttribute("id")==t&&e.addEventListener("click",(function(e){e.preventDefault,o.scrollIntoView({block:"start",inline:"nearest",behavior:"smooth"})}))})),function(){var e,t=s()(document.querySelectorAll("img[load-src]")),o={root:document.querySelector(".center"),rootMargin:"0px 0px 200px 0px"};try{e=new IntersectionObserver((function(t){t.forEach((function(t){t.isIntersecting&&(e.unobserve(t.target),t.target.src=t.target.dataset.src,t.target.onload=function(){return t.target.classList.add("loaded")})}))}),o),t.forEach((function(t){e.observe(t)}))}catch(e){t.forEach((function(e){e.setAttribute("src",e.getAttribute("data-src")),e.classList.add("loaded")}))}}(),new i.a(document.querySelector(".trust .swiper-container"),{wrapperClass:"swiper-wrapper",slideClass:"swiper-slide",direction:"horizontal",loop:!0,simulateTouch:!0,autoplay:{delay:3e3},speed:800,navigation:{nextEl:document.querySelector(".trust .swiper-button-next"),prevEl:document.querySelector(".trust .swiper-button-prev")},breakpoints:{1:{slidesPerView:2,spaceBetween:20},690:{spaceBetween:40,slidesPerView:3},960:{spaceBetween:40,slidesPerView:4}}}),new i.a(document.querySelector(".works .swiper-container"),{wrapperClass:"swiper-wrapper",slideClass:"swiper-slide",direction:"horizontal",loop:!0,simulateTouch:!0,autoplay:{delay:3e3},speed:800,navigation:{nextEl:document.querySelector(".works .swiper-button-next"),prevEl:document.querySelector(".works .swiper-button-prev")},breakpoints:{1:{slidesPerView:2,spaceBetween:20},480:{spaceBetween:40,slidesPerView:4}}}),c=document.querySelector('[am-burger-button="menu"]'),l=document.querySelector(".menu__mobile"),u=document.querySelectorAll("[menu-target]"),p=document.querySelector("body"),c.addEventListener("click",(function(){l.classList.contains("active")?(l.classList.remove("active"),p.removeAttribute("style")):(p.style.overflow="hidden",l.classList.add("active"))})),u.forEach((function(e){e.addEventListener("click",(function(){l.classList.remove("active"),c.removeAttribute("active"),p.removeAttribute("style")}))})),function(){document.querySelector("#ymaps");var e=function(){m.a.load("https://api-maps.yandex.ru/2.1/?apikey=74f946ea-5b98-49f2-9582-78854bb86bdf&lang=ru_RU&bust=v10").then((function(e){var t,o=[],r=new e.Map("ymaps",{center:[53.539484,49.265901],zoom:12,margin:10,controls:["fullscreenControl","geolocationControl","zoomControl"]},{suppressMapOpenBlock:!0,searchControlProvider:"yandex#search"});window.innerWidth<768&&r.controls.get("zoomControl").options.set("size","small");t=new e.Clusterer({preset:"islands#redClusterIcons",disableClickZoom:!1,openBalloonOnClick:!1}),window.addEventListener("resize",(function(){r.container.fitToViewport(),r.behaviors.disable("multiTouch")})),r.behaviors.disable("scrollZoom");o.push({coords:[53.539484,49.265901],cityName:"Тольятти",officeStreet:"ул. Дзержинского, д. 98, оф. 90 по будням с 8:00 до 17:00"}),function(o){var n=[];o.forEach((function(t,o){var i;n[o]=new e.GeoObject({geometry:{type:"Point",coordinates:t.coords},properties:{balloonContentHeader:t.cityName,balloonContentBody:"<p>".concat(t.officeStreet,"</p>")}},(i={preset:"islands#yellowDotIcon",iconLayout:"default#image",iconImageHref:"/retalservice/src/assets/img/icon_place.png",iconImageSize:[33,53],iconImageOffset:[-17,-55],draggable:!1},f()(i,"draggable",!1),f()(i,"hideIconOnBalloonOpen",!1),f()(i,"balloonOpenTimeout",300),f()(i,"balloonPane","outerBalloon"),f()(i,"zIndex",-1),i)),n[o].events.add("click",(function(e){n[o].geometry.getCoordinates(),n[o].options.get("projection").toGlobalPixels(r.getBounds()[1],r.getZoom()),n[o].options.get("projection").toGlobalPixels(n[o].geometry.getBounds()[1],r.getZoom());var t,i=n[o].options.get("projection").toGlobalPixels(n[o].geometry.getBounds()[1],r.getZoom());t=window.matchMedia("(max-width: 959px)").matches?[i[0],i[1]]:[i[0]+300,i[1]];var a=r.options.get("projection").fromGlobalPixels(t,r.getZoom());r.setCenter(a,r.getZoom(),{duration:300})}))})),t.add(n),r.geoObjects.add(t)}(o)})).catch((function(e){return console.log("Failed to load Yandex Maps",e)}))};e(),window.addEventListener("resize",(function(){e()}))}()}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,