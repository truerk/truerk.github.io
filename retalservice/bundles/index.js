!function(e){function t(t){for(var n,a,c=t[0],s=t[1],l=t[2],d=0,p=[];d<c.length;d++)a=c[d],Object.prototype.hasOwnProperty.call(r,a)&&r[a]&&p.push(r[a][0]),r[a]=0;for(n in s)Object.prototype.hasOwnProperty.call(s,n)&&(e[n]=s[n]);for(u&&u(t);p.length;)p.shift()();return i.push.apply(i,l||[]),o()}function o(){for(var e,t=0;t<i.length;t++){for(var o=i[t],n=!0,c=1;c<o.length;c++){var s=o[c];0!==r[s]&&(n=!1)}n&&(i.splice(t--,1),e=a(a.s=o[0]))}return e}var n={},r={0:0},i=[];function a(t){if(n[t])return n[t].exports;var o=n[t]={i:t,l:!1,exports:{}};return e[t].call(o.exports,o,o.exports,a),o.l=!0,o.exports}a.m=e,a.c=n,a.d=function(e,t,o){a.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},a.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},a.t=function(e,t){if(1&t&&(e=a(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(a.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var n in e)a.d(o,n,function(t){return e[t]}.bind(null,n));return o},a.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return a.d(t,"a",t),t},a.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},a.p="";var c=window.webpackJsonp=window.webpackJsonp||[],s=c.push.bind(c);c.push=t,c=c.slice();for(var l=0;l<c.length;l++)t(c[l]);var u=s;i.push([5,1]),o()}([,,,,,function(e,t,o){o(6),e.exports=o(13)},function(e,t,o){"use strict";o.r(t);o(7)},function(e,t,o){var n=o(8);"string"==typeof n&&(n=[[e.i,n,""]]);var r={insert:"head",singleton:!1};o(9)(n,r);n.locals&&(e.exports=n.locals)},function(e,t,o){},,,,,function(e,t,o){"use strict";o.r(t);var n=o(2),r=o.n(n),i=(document.querySelectorAll("[am-burger-button]").forEach((function(e){e.addEventListener("click",(function(){e.hasAttribute("active")?e.removeAttribute("active"):e.setAttribute("active","")}))})),o(1));var a=o(3),c=o.n(a);var s,l,u,d,p,f,m,b=o(0),v=o.n(b),g=o(4);r.a.polyfill(),document.querySelectorAll("[menu-target]").forEach((function(e){var t=e.getAttribute("menu-target"),o=document.getElementById(t)||!1;o&&o.getAttribute("id")==t&&e.addEventListener("click",(function(e){e.preventDefault,o.scrollIntoView({block:"start",inline:"nearest",behavior:"smooth"})}))})),s=c()(document.querySelectorAll("img[load-src]")),l={root:document.querySelector(".center"),rootMargin:"0px 0px 200px 0px"},u=new IntersectionObserver((function(e){e.forEach((function(e){e.isIntersecting&&(u.unobserve(e.target),e.target.src=e.target.dataset.src,e.target.onload=function(){return e.target.classList.add("loaded")})}))}),l),s.forEach((function(e){u.observe(e)})),new i.a(document.querySelector(".trust .swiper-container"),{wrapperClass:"swiper-wrapper",slideClass:"swiper-slide",direction:"horizontal",loop:!0,simulateTouch:!0,navigation:{nextEl:document.querySelector(".trust .swiper-button-next"),prevEl:document.querySelector(".trust .swiper-button-prev")},breakpoints:{1:{slidesPerView:2,spaceBetween:20},690:{spaceBetween:40,slidesPerView:4}}}),new i.a(document.querySelector(".works .swiper-container"),{wrapperClass:"swiper-wrapper",slideClass:"swiper-slide",direction:"horizontal",loop:!0,simulateTouch:!0,autoplay:{delay:3e3},speed:800,navigation:{nextEl:document.querySelector(".works .swiper-button-next"),prevEl:document.querySelector(".works .swiper-button-prev")},breakpoints:{1:{slidesPerView:2,spaceBetween:20},480:{spaceBetween:40,slidesPerView:4}}}),d=document.querySelector('[am-burger-button="menu"]'),p=document.querySelector(".menu__mobile"),f=document.querySelectorAll("[menu-target]"),m=document.querySelector("body"),d.addEventListener("click",(function(){p.classList.contains("active")?(p.classList.remove("active"),m.removeAttribute("style")):(m.style.overflow="hidden",p.classList.add("active"))})),f.forEach((function(e){e.addEventListener("click",(function(){p.classList.remove("active"),d.removeAttribute("active"),m.removeAttribute("style")}))})),function(){document.querySelector("#ymaps");var e=function(){g.a.load("https://api-maps.yandex.ru/2.1/?apikey=74f946ea-5b98-49f2-9582-78854bb86bdf&lang=ru_RU&bust=v10").then((function(e){var t,o=new e.control.ZoomControl({options:{position:{top:"auto",left:"5%",bottom:"50px",yandexMapAutoSwitch:!0}}}),n=[],r=new e.Map("ymaps",{center:[53.539484,49.265901],zoom:12,margin:10,controls:["fullscreenControl","geolocationControl",o]},{suppressMapOpenBlock:!0});t=new e.Clusterer({preset:"islands#redClusterIcons",disableClickZoom:!1,openBalloonOnClick:!1}),window.addEventListener("resize",(function(){r.container.fitToViewport(),r.behaviors.disable("multiTouch"),window.innerWidth,r.setCenter([53.539484,49.265901])})),window.innerWidth<720?(r.behaviors.disable("multiTouch"),r.setCenter([53.539484,49.265901])):r.setCenter([53.539484,49.265901]);n.push({coords:[53.539484,49.265901],cityName:"Тольятти",officeStreet:"ул. Дзержинского, д. 98, оф. 90 cежедневно с 8:00 до 17:00"}),function(o){var n=[];o.forEach((function(t,o){var i;n[o]=new e.GeoObject({geometry:{type:"Point",coordinates:t.coords},properties:{balloonContentHeader:t.cityName,balloonContentBody:"<p>".concat(t.officeStreet,"</p>")}},(i={preset:"islands#redCircleDotIcon",iconLayout:"default#image",iconImageHref:"/src/assets/icons/icon_place.svg",iconImageSize:[33,53],iconImageOffset:[-17,-55],draggable:!1},v()(i,"draggable",!1),v()(i,"hideIconOnBalloonOpen",!1),v()(i,"balloonOpenTimeout",300),v()(i,"balloonPane","outerBalloon"),v()(i,"zIndex",-1),i)),n[o].events.add("click",(function(e){n[o].geometry.getCoordinates(),n[o].options.get("projection").toGlobalPixels(r.getBounds()[1],r.getZoom()),n[o].options.get("projection").toGlobalPixels(n[o].geometry.getBounds()[1],r.getZoom());var t,i=n[o].options.get("projection").toGlobalPixels(n[o].geometry.getBounds()[1],r.getZoom());t=window.matchMedia("(max-width: 959px)").matches?[i[0],i[1]]:[i[0]+300,i[1]];var a=r.options.get("projection").fromGlobalPixels(t,r.getZoom());r.setCenter(a,r.getZoom(),{duration:300})}))})),t.add(n),r.geoObjects.add(t)}(n)})).catch((function(e){return console.log("Failed to load Yandex Maps",e)}))};e(),window.addEventListener("resize",(function(){e()}))}()}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,